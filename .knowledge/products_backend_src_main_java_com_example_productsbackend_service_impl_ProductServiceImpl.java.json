{"is_source_file": true, "format": "Java", "description": "Implementation of the ProductService interface, handling business logic for Product entities, including create, read, update, and delete operations.", "external_files": ["com/example/productsbackend/dto/ProductRequest.java", "com/example/productsbackend/dto/ProductResponse.java", "com/example/productsbackend/exception/NotFoundException.java", "com/example/productsbackend/mapper/ProductMapper.java", "com/example/productsbackend/model/Product.java", "com/example/productsbackend/repository/ProductRepository.java", "com/example/productsbackend/service/ProductService.java"], "external_methods": ["org.springframework.stereotype.Service", "org.springframework.transaction.annotation.Transactional", "com/example/productsbackend/mapper/ProductMapper.applyRequest", "com/example/productsbackend/mapper/ProductMapper.toResponse", "com/example/productsbackend/mapper/ProductMapper.toResponseList", "com/example/productsbackend.repository.ProductRepository.findAll", "com/example/productsbackend.repository.ProductRepository.findById", "com/example/productsbackend.repository.ProductRepository.existsById", "com/example/productsbackend.repository.ProductRepository.deleteById", "com/example/productsbackend.repository.ProductRepository.save", "com/example/productsbackend.exception.NotFoundException.<init>"], "published": ["com.example.productsbackend.service.ProductServiceImpl"], "classes": [{"name": "ProductServiceImpl", "description": "Implementation of ProductService responsible for Product business logic, including CRUD operations."}], "methods": [{"name": "create", "description": "Creates a new Product from the provided request, saves it, and returns a response object."}, {"name": "findAll", "description": "Retrieves all products, returning a list of response DTOs."}, {"name": "findById", "description": "Finds a product by its ID, throws NotFoundException if not found, returns a response DTO."}, {"name": "update", "description": "Updates an existing product identified by ID with data from the request, saves, and returns updated response."}, {"name": "delete", "description": "Deletes a product by its ID if it exists, throws NotFoundException otherwise."}], "calls": ["ProductMapper.applyRequest", "ProductMapper.toResponse", "ProductMapper.toResponseList", "repository.findAll", "repository.findById", "repository.existsById", "repository.deleteById", "repository.save", "new NotFoundException"], "search-terms": ["ProductServiceImpl", "business logic", "ProductRepository", "ProductMapper", "create Product", "find Product by ID", "update Product", "delete Product"], "state": 2, "file_id": 16, "knowledge_revision": 32, "git_revision": "", "hash": "6229b97c29be02ebfcc1641ac27cca72", "format-version": 4, "code-base-name": "products_backend", "filename": "products_backend/src/main/java/com/example/productsbackend/service/impl/ProductServiceImpl.java", "revision_history": [{"32": ""}]}